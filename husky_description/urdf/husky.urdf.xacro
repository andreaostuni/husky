<?xml version="1.0"?>

<robot xmlns:xacro="http://ros.org/wiki/xacro" name="husky">
  <!-- robot name parameter -->
  <!-- <xacro:arg name="name" default="" /> -->

  <xacro:arg name="prefix" default="" />
  <xacro:arg name="gazebo_controllers" default="$(find husky_control)/config/control.yaml" />

  <xacro:include filename="$(find husky_description)/urdf/husky_macro.urdf.xacro" />

  <!-- Load husky description -->
  <xacro:husky prefix="$(arg prefix)" />


  <xacro:if value="$(arg is_sim)">

    <gazebo>
      <plugin name="$(arg prefix)gazebo_ros2_control" filename="libgazebo_ros2_control.so">
        <parameters>$(arg gazebo_controllers)</parameters>
      </plugin>
    </gazebo>

    <gazebo reference="$(arg prefix)imu_link">
      <sensor name="$(arg prefix)imu_sensor" type="imu">
      <plugin filename="libgazebo_ros_imu_sensor.so" name="$(arg prefix)imu_plugin">
          <ros>
            <namespace>$(arg prefix)</namespace>
            <remapping>~/out:=imu/data_raw</remapping>
          </ros>
          <initial_orientation_as_reference>false</initial_orientation_as_reference>
        </plugin>
        <always_on>true</always_on>
        <update_rate>100</update_rate>
        <visualize>true</visualize>
      </sensor>
    </gazebo>

    <gazebo reference="$(arg prefix)gps_link">
      <sensor name="$(arg prefix)gps_sensor" type="gps">
      <plugin filename="libgazebo_ros_gps_sensor.so" name="$(arg prefix)gps_plugin">
          <ros>
            <namespace>$(arg prefix)</namespace>
            <remapping>~/out:=gps/data</remapping>
          </ros>
        </plugin>
        <always_on>true</always_on>
        <update_rate>10</update_rate>
      </sensor>
    </gazebo>

    <gazebo>
      <plugin name="gazebo_ros_p3d" filename="libgazebo_ros_p3d.so">
        <ros>
          <namespace>$(arg prefix)</namespace>
          <remapping>odom:=ground_truth</remapping>
        </ros>
        <body_name>base_link</body_name>
        <update_rate>10</update_rate>
      </plugin>
    </gazebo>

    <xacro:if value="$(arg husky_wheel_slip)">
      <gazebo>
        <plugin filename="libgazebo_ros_wheel_slip.so" name="wheels_slip">
          <wheel link_name="front_left_wheel">
            <slip_compliance_lateral>1.0</slip_compliance_lateral>
            <slip_compliance_longitudinal>1.0</slip_compliance_longitudinal>
            <wheel_normal_force>113</wheel_normal_force>
            <wheel_radius>0.1651</wheel_radius>
          </wheel>
          <wheel link_name="front_right_wheel">
            <slip_compliance_lateral>1.0</slip_compliance_lateral>
            <slip_compliance_longitudinal>1.0</slip_compliance_longitudinal>
            <wheel_normal_force>113</wheel_normal_force>
            <wheel_radius>0.1651</wheel_radius>
          </wheel>
          <wheel link_name="rear_left_wheel">
            <slip_compliance_lateral>1.0</slip_compliance_lateral>
            <slip_compliance_longitudinal>1.0</slip_compliance_longitudinal>
            <wheel_normal_force>113</wheel_normal_force>
            <wheel_radius>0.1651</wheel_radius>
          </wheel>
          <wheel link_name="rear_right_wheel">
            <slip_compliance_lateral>1.0</slip_compliance_lateral>
            <slip_compliance_longitudinal>1.0</slip_compliance_longitudinal>
            <wheel_normal_force>113</wheel_normal_force>
            <wheel_radius>0.1651</wheel_radius>
          </wheel>
        </plugin>
      </gazebo>
    </xacro:if>

  </xacro:if>

  <!-- Optional custom includes. -->
  <xacro:include filename="$(arg urdf_extras)" />

</robot>
